{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":29,"index":44},"end":{"line":3,"column":84,"index":99}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":44,"index":213},"end":{"line":6,"column":91,"index":260}}],"key":"F+ExrfS9dcoZxXJOBwTmx09hji8=","exportNames":["*"]}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":40,"index":303},"end":{"line":7,"column":69,"index":332}}],"key":"ePiUN85REKH0vTLGPPDgdWgjFww=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,e,d){\"use strict\";var s=r(d[0]).default;e.__esModule=!0,e.CellRenderMask=void 0;var t=s(r(d[1])),i=s(r(d[2]));e.CellRenderMask=class{constructor(s){(0,i.default)(s>=0,'CellRenderMask must contain a non-negative number os cells'),this._numCells=s,this._regions=0===s?[]:[{first:0,last:s-1,isSpacer:!0}]}enumerateRegions(){return this._regions}addCells(s){if((0,i.default)(s.first>=0&&s.first<this._numCells&&s.last>=-1&&s.last<this._numCells&&s.last>=s.first-1,'CellRenderMask.addCells called with invalid cell range'),!(s.last<s.first)){var l=this._findRegion(s.first),n=l[0],f=l[1],o=this._findRegion(s.last),u=o[0],_=o[1];if(f!==_||n.isSpacer){var c=[],h=[],C=(0,t.default)((0,t.default)({},s),{},{isSpacer:!1});n.first<C.first&&(n.isSpacer?c.push({first:n.first,last:C.first-1,isSpacer:!0}):C.first=n.first),u.last>C.last&&(u.isSpacer?h.push({first:C.last+1,last:u.last,isSpacer:!0}):C.last=u.last);var p=[...c,C,...h],v=_-f+1;this._regions.splice(f,v,...p)}}}numCells(){return this._numCells}equals(s){return this._numCells===s._numCells&&this._regions.length===s._regions.length&&this._regions.every((t,i)=>t.first===s._regions[i].first&&t.last===s._regions[i].last&&t.isSpacer===s._regions[i].isSpacer)}_findRegion(s){for(var t=0,l=this._regions.length-1;t<=l;){var n=Math.floor((t+l)/2),f=this._regions[n];if(s>=f.first&&s<=f.last)return[f,n];s<f.first?l=n-1:s>f.last&&(t=n+1)}(0,i.default)(!1,\"A region was not found containing cellIdx \"+s)}}});","lineCount":1,"map":[[1,29,1,0],[1,42,3,0],[1,46,3,4,"_interopRequireDefault"],[1,48,3,29,"require"],[1,50,3,36,"d"],[1,52,3,36],[1,56,3,85,"default"],[1,64,4,0,"exports"],[1,66,4,8,"__esModule"],[1,78,4,21],[1,80,5,0,"exports"],[1,82,5,8,"CellRenderMask"],[1,102,5,22,"undefined"],[1,104,6,0],[1,108,6,4,"_objectSpread2"],[1,110,6,21,"_interopRequireDefault"],[1,112,6,44,"require"],[1,114,6,51,"d"],[1,116,6,51],[1,121,7,4,"_invariant"],[1,123,7,17,"_interopRequireDefault"],[1,125,7,40,"require"],[1,127,7,47,"d"],[1,129,7,47],[1,134,112,0,"exports"],[1,136,112,8,"CellRenderMask"],[1,151,18,0],[1,157,19,2,"constructor"],[1,169,19,14,"numCells"],[1,173,20,4],[1,175,20,8,"_invariant"],[1,177,20,19,"default"],[1,186,20,28,"numCells"],[1,189,20,40],[1,191,20,43],[1,253,21,4,"this"],[1,258,21,9,"_numCells"],[1,268,21,21,"numCells"],[1,270,23,6,"this"],[1,275,23,11,"_regions"],[1,284,22,21],[1,288,22,8,"numCells"],[1,290,23,22],[1,293,25,22],[1,294,25,23],[1,295,26,8,"first"],[1,301,26,15],[1,303,27,8,"last"],[1,308,27,14,"numCells"],[1,310,27,25],[1,312,28,8,"isSpacer"],[1,322,28,18],[1,325,31,2],[1,326,32,2,"enumerateRegions"],[1,345,33,4],[1,352,33,11,"this"],[1,357,33,16,"_regions"],[1,365,34,2],[1,366,35,2,"addCells"],[1,375,35,11,"cells"],[1,378,40,4],[1,382,36,4],[1,384,36,8,"_invariant"],[1,386,36,19,"default"],[1,395,36,28,"cells"],[1,397,36,34,"first"],[1,404,36,43],[1,407,36,48,"cells"],[1,409,36,54,"first"],[1,415,36,62,"this"],[1,420,36,67,"_numCells"],[1,431,36,80,"cells"],[1,433,36,86,"last"],[1,440,36,90],[1,443,36,100,"cells"],[1,445,36,106,"last"],[1,450,36,113,"this"],[1,455,36,118,"_numCells"],[1,466,36,131,"cells"],[1,468,36,137,"last"],[1,474,36,145,"cells"],[1,476,36,151,"first"],[1,482,36,159],[1,484,36,162],[1,544,40,8,"cells"],[1,546,40,14,"last"],[1,551,40,21,"cells"],[1,553,40,27,"first"],[1,560,40,4],[1,561,43,4],[1,565,43,8,"_this$_findRegion"],[1,567,43,28,"this"],[1,572,43,33,"_findRegion"],[1,584,43,45,"cells"],[1,586,43,51,"first"],[1,593,44,6,"firstIntersect"],[1,595,44,23,"_this$_findRegion"],[1,597,44,41],[1,600,45,6,"firstIntersectIdx"],[1,602,45,26,"_this$_findRegion"],[1,604,45,44],[1,607,46,8,"_this$_findRegion2"],[1,609,46,29,"this"],[1,614,46,34,"_findRegion"],[1,626,46,46,"cells"],[1,628,46,52,"last"],[1,634,47,6,"lastIntersect"],[1,636,47,22,"_this$_findRegion2"],[1,638,47,41],[1,641,48,6,"lastIntersectIdx"],[1,643,48,25,"_this$_findRegion2"],[1,645,48,44],[1,648,52,4],[1,651,52,8,"firstIntersectIdx"],[1,655,52,30,"lastIntersectIdx"],[1,658,52,51,"firstIntersect"],[1,660,52,66,"isSpacer"],[1,669,52,4],[1,670,58,4],[1,674,58,8,"newLeadRegion"],[1,676,58,24],[1,679,59,8,"newTailRegion"],[1,681,59,24],[1,684,60,8,"newMainRegion"],[1,687,60,24],[1,689,60,28,"_objectSpread2"],[1,691,60,43,"default"],[1,701,60,52],[1,703,60,56,"_objectSpread2"],[1,705,60,71,"default"],[1,714,60,80],[1,715,60,81],[1,717,60,84,"cells"],[1,720,60,92],[1,721,60,93],[1,723,60,96],[1,724,61,6,"isSpacer"],[1,734,61,16],[1,738,63,8,"firstIntersect"],[1,740,63,23,"first"],[1,746,63,31,"newMainRegion"],[1,748,63,45,"first"],[1,756,64,10,"firstIntersect"],[1,758,64,25,"isSpacer"],[1,767,65,8,"newLeadRegion"],[1,769,65,22,"push"],[1,774,65,27],[1,775,66,10,"first"],[1,781,66,17,"firstIntersect"],[1,783,66,32,"first"],[1,789,67,10,"last"],[1,794,67,16,"newMainRegion"],[1,796,67,30,"first"],[1,802,67,38],[1,804,68,10,"isSpacer"],[1,814,68,20],[1,818,71,8,"newMainRegion"],[1,820,71,22,"first"],[1,826,71,30,"firstIntersect"],[1,828,71,45,"first"],[1,835,74,8,"lastIntersect"],[1,837,74,22,"last"],[1,842,74,29,"newMainRegion"],[1,844,74,43,"last"],[1,851,75,10,"lastIntersect"],[1,853,75,24,"isSpacer"],[1,862,76,8,"newTailRegion"],[1,864,76,22,"push"],[1,869,76,27],[1,870,77,10,"first"],[1,876,77,17,"newMainRegion"],[1,878,77,31,"last"],[1,883,77,38],[1,885,78,10,"last"],[1,890,78,16,"lastIntersect"],[1,892,78,30,"last"],[1,897,79,10,"isSpacer"],[1,907,79,20],[1,911,82,8,"newMainRegion"],[1,913,82,22,"last"],[1,918,82,29,"lastIntersect"],[1,920,82,43,"last"],[1,926,85,4],[1,930,85,8,"replacementRegions"],[1,932,85,29],[1,936,85,33,"newLeadRegion"],[1,938,85,48,"newMainRegion"],[1,943,85,66,"newTailRegion"],[1,946,86,8,"numRegionsToDelete"],[1,948,86,29,"lastIntersectIdx"],[1,950,86,48,"firstIntersectIdx"],[1,952,86,68],[1,954,87,4,"this"],[1,959,87,9,"_regions"],[1,968,87,18,"splice"],[1,975,87,25,"firstIntersectIdx"],[1,977,87,44,"numRegionsToDelete"],[1,982,87,67,"replacementRegions"],[1,984,54,4],[1,985,42,4],[1,986,88,2],[1,987,89,2,"numCells"],[1,998,90,4],[1,1005,90,11,"this"],[1,1010,90,16,"_numCells"],[1,1019,91,2],[1,1020,92,2,"equals"],[1,1027,92,9,"other"],[1,1030,93,4],[1,1037,93,11,"this"],[1,1042,93,16,"_numCells"],[1,1054,93,30,"other"],[1,1056,93,36,"_numCells"],[1,1067,93,49,"this"],[1,1072,93,54,"_regions"],[1,1081,93,63,"length"],[1,1090,93,74,"other"],[1,1092,93,80,"_regions"],[1,1101,93,89,"length"],[1,1109,93,99,"this"],[1,1114,93,104,"_regions"],[1,1123,93,113,"every"],[1,1129,93,119],[1,1130,93,120,"region"],[1,1132,93,128,"i"],[1,1136,93,134,"region"],[1,1138,93,141,"first"],[1,1146,93,151,"other"],[1,1148,93,157,"_regions"],[1,1157,93,166,"i"],[1,1160,93,169,"first"],[1,1167,93,178,"region"],[1,1169,93,185,"last"],[1,1176,93,194,"other"],[1,1178,93,200,"_regions"],[1,1187,93,209,"i"],[1,1190,93,212,"last"],[1,1196,93,220,"region"],[1,1198,93,227,"isSpacer"],[1,1209,93,240,"other"],[1,1211,93,246,"_regions"],[1,1220,93,255,"i"],[1,1223,93,258,"isSpacer"],[1,1232,94,2],[1,1233,95,2,"_findRegion"],[1,1245,95,14,"cellIdx"],[1,1248,98,4],[1,1252,96,4],[1,1256,96,8,"firstIdx"],[1,1258,96,19],[1,1260,97,8,"lastIdx"],[1,1262,97,18,"this"],[1,1267,97,23,"_regions"],[1,1276,97,32,"length"],[1,1283,97,41],[1,1285,98,11,"firstIdx"],[1,1288,98,23,"lastIdx"],[1,1291,98,32],[1,1292,99,6],[1,1296,99,10,"middleIdx"],[1,1298,99,22,"Math"],[1,1303,99,27,"floor"],[1,1310,99,34,"firstIdx"],[1,1312,99,45,"lastIdx"],[1,1315,99,56],[1,1318,100,10,"middleRegion"],[1,1320,100,25,"this"],[1,1325,100,30,"_regions"],[1,1334,100,39,"middleIdx"],[1,1337,101,6],[1,1340,101,10,"cellIdx"],[1,1343,101,21,"middleRegion"],[1,1345,101,34,"first"],[1,1352,101,43,"cellIdx"],[1,1355,101,54,"middleRegion"],[1,1357,101,67,"last"],[1,1362,102,8],[1,1368,102,15],[1,1369,102,16,"middleRegion"],[1,1371,102,30,"middleIdx"],[1,1374,103,17,"cellIdx"],[1,1376,103,27,"middleRegion"],[1,1378,103,40,"first"],[1,1384,104,8,"lastIdx"],[1,1386,104,18,"middleIdx"],[1,1388,104,30],[1,1390,105,17,"cellIdx"],[1,1392,105,27,"middleRegion"],[1,1394,105,40,"last"],[1,1401,106,8,"firstIdx"],[1,1403,106,19,"middleIdx"],[1,1405,106,31],[1,1407,108,4],[1,1409,109,4],[1,1411,109,8,"_invariant"],[1,1413,109,19,"default"],[1,1423,109,28],[1,1425,109,35],[1,1470,109,82,"cellIdx"],[1,1472,110,2],[1,1474,112,40],[1,1477]],"functionMap":{"names":["<global>","CellRenderMask","constructor","enumerateRegions","addCells","numCells","equals","_regions.every$argument_0","_findRegion"],"mappings":"AAA;ACiB;ECC;GDY;EEC;GFE;EGC;GHqD;EIC;GJE;EKC;uHCC,mJD;GLC;EOC;GPe;CDC"}},"type":"js/module"}]}