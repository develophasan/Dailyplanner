{"dependencies":[{"name":"xdate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":14,"index":14},"end":{"line":1,"column":30,"index":30}}],"key":"IuA7xzW7NEYpL1z4xYxBhE6c8f8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.padNumber = padNumber;\n  exports.parseDate = parseDate;\n  exports.toMarkingFormat = toMarkingFormat;\n  exports.xdateToData = xdateToData;\n  const XDate = require(_dependencyMap[0], \"xdate\");\n  function padNumber(n) {\n    if (n < 10) {\n      return '0' + n;\n    }\n    return n;\n  }\n  function xdateToData(date) {\n    const d = date instanceof XDate ? date : new XDate(date);\n    const dateString = toMarkingFormat(d);\n    return {\n      year: d.getFullYear(),\n      month: d.getMonth() + 1,\n      day: d.getDate(),\n      timestamp: new XDate(dateString, true).getTime(),\n      dateString: dateString\n    };\n  }\n  function parseDate(d) {\n    if (!d) {\n      return;\n    } else if (d.timestamp) {\n      // conventional data timestamp\n      return new XDate(d.timestamp, true);\n    } else if (d instanceof XDate) {\n      // xdate\n      return new XDate(toMarkingFormat(d), true);\n    } else if (d.getTime) {\n      // javascript date\n      const dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n      return new XDate(dateString, true);\n    } else if (d.year) {\n      const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n      return new XDate(dateString, true);\n    } else if (d) {\n      // timestamp number or date formatted as string\n      return new XDate(d, true);\n    }\n  }\n  function toMarkingFormat(d) {\n    if (!isNaN(d.getTime())) {\n      const year = `${d.getFullYear()}`;\n      const month = d.getMonth() + 1;\n      const doubleDigitMonth = month < 10 ? `0${month}` : `${month}`;\n      const day = d.getDate();\n      const doubleDigitDay = day < 10 ? `0${day}` : `${day}`;\n      return year + '-' + doubleDigitMonth + '-' + doubleDigitDay;\n    }\n    return 'Invalid Date';\n  }\n});","lineCount":59,"map":[[9,2,1,0],[9,8,1,6,"XDate"],[9,13,1,11],[9,16,1,14,"require"],[9,23,1,21],[9,24,1,21,"_dependencyMap"],[9,38,1,21],[9,50,1,29],[9,51,1,30],[10,2,2,7],[10,11,2,16,"padNumber"],[10,20,2,25,"padNumber"],[10,21,2,26,"n"],[10,22,2,27],[10,24,2,29],[11,4,3,4],[11,8,3,8,"n"],[11,9,3,9],[11,12,3,12],[11,14,3,14],[11,16,3,16],[12,6,4,8],[12,13,4,15],[12,16,4,18],[12,19,4,21,"n"],[12,20,4,22],[13,4,5,4],[14,4,6,4],[14,11,6,11,"n"],[14,12,6,12],[15,2,7,0],[16,2,8,7],[16,11,8,16,"xdateToData"],[16,22,8,27,"xdateToData"],[16,23,8,28,"date"],[16,27,8,32],[16,29,8,34],[17,4,9,4],[17,10,9,10,"d"],[17,11,9,11],[17,14,9,14,"date"],[17,18,9,18],[17,30,9,30,"XDate"],[17,35,9,35],[17,38,9,38,"date"],[17,42,9,42],[17,45,9,45],[17,49,9,49,"XDate"],[17,54,9,54],[17,55,9,55,"date"],[17,59,9,59],[17,60,9,60],[18,4,10,4],[18,10,10,10,"dateString"],[18,20,10,20],[18,23,10,23,"toMarkingFormat"],[18,38,10,38],[18,39,10,39,"d"],[18,40,10,40],[18,41,10,41],[19,4,11,4],[19,11,11,11],[20,6,12,8,"year"],[20,10,12,12],[20,12,12,14,"d"],[20,13,12,15],[20,14,12,16,"getFullYear"],[20,25,12,27],[20,26,12,28],[20,27,12,29],[21,6,13,8,"month"],[21,11,13,13],[21,13,13,15,"d"],[21,14,13,16],[21,15,13,17,"getMonth"],[21,23,13,25],[21,24,13,26],[21,25,13,27],[21,28,13,30],[21,29,13,31],[22,6,14,8,"day"],[22,9,14,11],[22,11,14,13,"d"],[22,12,14,14],[22,13,14,15,"getDate"],[22,20,14,22],[22,21,14,23],[22,22,14,24],[23,6,15,8,"timestamp"],[23,15,15,17],[23,17,15,19],[23,21,15,23,"XDate"],[23,26,15,28],[23,27,15,29,"dateString"],[23,37,15,39],[23,39,15,41],[23,43,15,45],[23,44,15,46],[23,45,15,47,"getTime"],[23,52,15,54],[23,53,15,55],[23,54,15,56],[24,6,16,8,"dateString"],[24,16,16,18],[24,18,16,20,"dateString"],[25,4,17,4],[25,5,17,5],[26,2,18,0],[27,2,19,7],[27,11,19,16,"parseDate"],[27,20,19,25,"parseDate"],[27,21,19,26,"d"],[27,22,19,27],[27,24,19,29],[28,4,20,4],[28,8,20,8],[28,9,20,9,"d"],[28,10,20,10],[28,12,20,12],[29,6,21,8],[30,4,22,4],[30,5,22,5],[30,11,23,9],[30,15,23,13,"d"],[30,16,23,14],[30,17,23,15,"timestamp"],[30,26,23,24],[30,28,23,26],[31,6,24,8],[32,6,25,8],[32,13,25,15],[32,17,25,19,"XDate"],[32,22,25,24],[32,23,25,25,"d"],[32,24,25,26],[32,25,25,27,"timestamp"],[32,34,25,36],[32,36,25,38],[32,40,25,42],[32,41,25,43],[33,4,26,4],[33,5,26,5],[33,11,27,9],[33,15,27,13,"d"],[33,16,27,14],[33,28,27,26,"XDate"],[33,33,27,31],[33,35,27,33],[34,6,28,8],[35,6,29,8],[35,13,29,15],[35,17,29,19,"XDate"],[35,22,29,24],[35,23,29,25,"toMarkingFormat"],[35,38,29,40],[35,39,29,41,"d"],[35,40,29,42],[35,41,29,43],[35,43,29,45],[35,47,29,49],[35,48,29,50],[36,4,30,4],[36,5,30,5],[36,11,31,9],[36,15,31,13,"d"],[36,16,31,14],[36,17,31,15,"getTime"],[36,24,31,22],[36,26,31,24],[37,6,32,8],[38,6,33,8],[38,12,33,14,"dateString"],[38,22,33,24],[38,25,33,27,"d"],[38,26,33,28],[38,27,33,29,"getFullYear"],[38,38,33,40],[38,39,33,41],[38,40,33,42],[38,43,33,45],[38,46,33,48],[38,49,33,51,"padNumber"],[38,58,33,60],[38,59,33,61,"d"],[38,60,33,62],[38,61,33,63,"getMonth"],[38,69,33,71],[38,70,33,72],[38,71,33,73],[38,74,33,76],[38,75,33,77],[38,76,33,78],[38,79,33,81],[38,82,33,84],[38,85,33,87,"padNumber"],[38,94,33,96],[38,95,33,97,"d"],[38,96,33,98],[38,97,33,99,"getDate"],[38,104,33,106],[38,105,33,107],[38,106,33,108],[38,107,33,109],[39,6,34,8],[39,13,34,15],[39,17,34,19,"XDate"],[39,22,34,24],[39,23,34,25,"dateString"],[39,33,34,35],[39,35,34,37],[39,39,34,41],[39,40,34,42],[40,4,35,4],[40,5,35,5],[40,11,36,9],[40,15,36,13,"d"],[40,16,36,14],[40,17,36,15,"year"],[40,21,36,19],[40,23,36,21],[41,6,37,8],[41,12,37,14,"dateString"],[41,22,37,24],[41,25,37,27,"d"],[41,26,37,28],[41,27,37,29,"year"],[41,31,37,33],[41,34,37,36],[41,37,37,39],[41,40,37,42,"padNumber"],[41,49,37,51],[41,50,37,52,"d"],[41,51,37,53],[41,52,37,54,"month"],[41,57,37,59],[41,58,37,60],[41,61,37,63],[41,64,37,66],[41,67,37,69,"padNumber"],[41,76,37,78],[41,77,37,79,"d"],[41,78,37,80],[41,79,37,81,"day"],[41,82,37,84],[41,83,37,85],[42,6,38,8],[42,13,38,15],[42,17,38,19,"XDate"],[42,22,38,24],[42,23,38,25,"dateString"],[42,33,38,35],[42,35,38,37],[42,39,38,41],[42,40,38,42],[43,4,39,4],[43,5,39,5],[43,11,40,9],[43,15,40,13,"d"],[43,16,40,14],[43,18,40,16],[44,6,41,8],[45,6,42,8],[45,13,42,15],[45,17,42,19,"XDate"],[45,22,42,24],[45,23,42,25,"d"],[45,24,42,26],[45,26,42,28],[45,30,42,32],[45,31,42,33],[46,4,43,4],[47,2,44,0],[48,2,45,7],[48,11,45,16,"toMarkingFormat"],[48,26,45,31,"toMarkingFormat"],[48,27,45,32,"d"],[48,28,45,33],[48,30,45,35],[49,4,46,4],[49,8,46,8],[49,9,46,9,"isNaN"],[49,14,46,14],[49,15,46,15,"d"],[49,16,46,16],[49,17,46,17,"getTime"],[49,24,46,24],[49,25,46,25],[49,26,46,26],[49,27,46,27],[49,29,46,29],[50,6,47,8],[50,12,47,14,"year"],[50,16,47,18],[50,19,47,21],[50,22,47,24,"d"],[50,23,47,25],[50,24,47,26,"getFullYear"],[50,35,47,37],[50,36,47,38],[50,37,47,39],[50,39,47,41],[51,6,48,8],[51,12,48,14,"month"],[51,17,48,19],[51,20,48,22,"d"],[51,21,48,23],[51,22,48,24,"getMonth"],[51,30,48,32],[51,31,48,33],[51,32,48,34],[51,35,48,37],[51,36,48,38],[52,6,49,8],[52,12,49,14,"doubleDigitMonth"],[52,28,49,30],[52,31,49,33,"month"],[52,36,49,38],[52,39,49,41],[52,41,49,43],[52,44,49,46],[52,48,49,50,"month"],[52,53,49,55],[52,55,49,57],[52,58,49,60],[52,61,49,63,"month"],[52,66,49,68],[52,68,49,70],[53,6,50,8],[53,12,50,14,"day"],[53,15,50,17],[53,18,50,20,"d"],[53,19,50,21],[53,20,50,22,"getDate"],[53,27,50,29],[53,28,50,30],[53,29,50,31],[54,6,51,8],[54,12,51,14,"doubleDigitDay"],[54,26,51,28],[54,29,51,31,"day"],[54,32,51,34],[54,35,51,37],[54,37,51,39],[54,40,51,42],[54,44,51,46,"day"],[54,47,51,49],[54,49,51,51],[54,52,51,54],[54,55,51,57,"day"],[54,58,51,60],[54,60,51,62],[55,6,52,8],[55,13,52,15,"year"],[55,17,52,19],[55,20,52,22],[55,23,52,25],[55,26,52,28,"doubleDigitMonth"],[55,42,52,44],[55,45,52,47],[55,48,52,50],[55,51,52,53,"doubleDigitDay"],[55,65,52,67],[56,4,53,4],[57,4,54,4],[57,11,54,11],[57,25,54,25],[58,2,55,0],[59,0,55,1],[59,3]],"functionMap":{"names":["<global>","padNumber","xdateToData","parseDate","toMarkingFormat"],"mappings":"AAA;OCC;CDK;OEC;CFU;OGC;CHyB;OIC;CJU"}},"type":"js/module"}]}